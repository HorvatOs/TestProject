@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging
@model PagingList<Vehicle.Models.IndexMake>

@{ ViewData["Title"] = "Index"; }

<h1>Vehicle Makes</h1>

<div>  
    <form method="post">
        <div>
            <div align="center" class="float-left"><a asp-action="Create" class="btn btn-outline-success" style="margin-bottom:15px">Create New</a></div>
            <div align="center" class="float-right"><input type="text" style="width:200px; margin-bottom:15px" class="form-control" placeholder="Enter name" name="search" maxlength="20" value="@Model.RouteValue["search"]" /></div>
            <div align="center" class="float-right" style="margin-top:5px;margin-right:5px">Search:</div>
        </div>
    </form>

</div>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.SortableHeaderFor(model => model.Name, "Name")
            </th>

            <th>
                @Html.SortableHeaderFor(model => model.Abrv, "Abrv")
            </th>
            <th></th>
        </tr>


    </thead>
    <tbody>
        @foreach (var item in Model)
        {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Abrv)
    </td>
    <td>
        <div align="center" class="float-right">
            <a asp-controller="VehicleModel" asp-action="Index" asp-route-makeId="@item.Id" asp-route-search="" class="btn btn-outline-dark">Models</a>
            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-dark">Edit</a>
            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-dark">Details</a>
            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Delete</a>
        </div>

    </td>
</tr>
        }
    </tbody>
</table>

<nav aria-label="Car makes navigation">
    <vc:pager paging-list = "@Model" />
</nav>